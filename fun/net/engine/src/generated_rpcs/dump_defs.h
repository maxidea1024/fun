/**
 * Auto-generated by IDL Compiler (2.1.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
#pragma once

#include "FUN.h"

namespace fun {

namespace DumpC2S
{
  const fun::int32 NumRpcFunctions = 3;

  // Rpc function id constants.
  namespace RpcIds
  {
    const fun::RpcId Start = (fun::RpcId)900;
    const fun::RpcId Chunk = (fun::RpcId)901;
    const fun::RpcId End = (fun::RpcId)902;

    inline const fun::RpcId* RpcIdList()
    {
      static const fun::RpcId IdList[NumRpcFunctions] = {Start, Chunk, End};
      return IdList;
    }
  }

  // Rpc function name string constants.
  namespace RpcNames
  {
    inline const char* Start() { return TEXT("Start"); }
    inline const char* Chunk() { return TEXT("Chunk"); }
    inline const char* End() { return TEXT("End"); }

    inline const char** RpcNameList()
    {
      static const char* NameList[NumRpcFunctions] = {Start(), Chunk(), End()};
      return NameList;
    }
  }
} // end of namespace DumpC2S

namespace DumpS2C
{
  const fun::int32 NumRpcFunctions = 1;

  // Rpc function id constants.
  namespace RpcIds
  {
    const fun::RpcId ChunkAck = (fun::RpcId)950;

    inline const fun::RpcId* RpcIdList()
    {
      static const fun::RpcId IdList[NumRpcFunctions] = {ChunkAck};
      return IdList;
    }
  }

  // Rpc function name string constants.
  namespace RpcNames
  {
    inline const char* ChunkAck() { return TEXT("ChunkAck"); }

    inline const char** RpcNameList()
    {
      static const char* NameList[NumRpcFunctions] = {ChunkAck()};
      return NameList;
    }
  }
} // end of namespace DumpS2C

} // end of namespace fun
