/**
 * Auto-generated by IDL Compiler (2.1.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
#pragma once

#include "FUN.h"

namespace fun {

namespace LanC2C
{
  const fun::int32 NumRpcFunctions = 1;

  // Rpc function id constants.
  namespace RpcIds
  {
    const fun::RpcId Foo = (fun::RpcId)61000;

    inline const fun::RpcId* RpcIdList()
    {
      static const fun::RpcId IdList[NumRpcFunctions] = {Foo};
      return IdList;
    }
  }

  // Rpc function name string constants.
  namespace RpcNames
  {
    inline const char* Foo() { return TEXT("Foo"); }

    inline const char** RpcNameList()
    {
      static const char* NameList[NumRpcFunctions] = {Foo()};
      return NameList;
    }
  }
} // end of namespace LanC2C

namespace LanC2S
{
  const fun::int32 NumRpcFunctions = 5;

  // Rpc function id constants.
  namespace RpcIds
  {
    const fun::RpcId ReliablePing = (fun::RpcId)62000;
    const fun::RpcId P2PGroup_MemberJoin_Ack = (fun::RpcId)62001;
    const fun::RpcId ReportP2PPeerPing = (fun::RpcId)62002;
    const fun::RpcId ShutdownTcp = (fun::RpcId)62003;
    const fun::RpcId ShutdownTcpHandshake = (fun::RpcId)62004;

    inline const fun::RpcId* RpcIdList()
    {
      static const fun::RpcId IdList[NumRpcFunctions] = {ReliablePing, P2PGroup_MemberJoin_Ack, ReportP2PPeerPing, ShutdownTcp, ShutdownTcpHandshake};
      return IdList;
    }
  }

  // Rpc function name string constants.
  namespace RpcNames
  {
    inline const char* ReliablePing() { return TEXT("ReliablePing"); }
    inline const char* P2PGroup_MemberJoin_Ack() { return TEXT("P2PGroup_MemberJoin_Ack"); }
    inline const char* ReportP2PPeerPing() { return TEXT("ReportP2PPeerPing"); }
    inline const char* ShutdownTcp() { return TEXT("ShutdownTcp"); }
    inline const char* ShutdownTcpHandshake() { return TEXT("ShutdownTcpHandshake"); }

    inline const char** RpcNameList()
    {
      static const char* NameList[NumRpcFunctions] = {ReliablePing(), P2PGroup_MemberJoin_Ack(), ReportP2PPeerPing(), ShutdownTcp(), ShutdownTcpHandshake()};
      return NameList;
    }
  }
} // end of namespace LanC2S

namespace LanS2C
{
  const fun::int32 NumRpcFunctions = 8;

  // Rpc function id constants.
  namespace RpcIds
  {
    const fun::RpcId P2PGroup_MemberJoin = (fun::RpcId)62500;
    const fun::RpcId P2PGroup_MemberJoin_Unencrypted = (fun::RpcId)62501;
    const fun::RpcId P2PGroup_MemberLeave = (fun::RpcId)62502;
    const fun::RpcId ReliablePong = (fun::RpcId)62503;
    const fun::RpcId P2PConnectStart = (fun::RpcId)62504;
    const fun::RpcId ShutdownTcpAck = (fun::RpcId)62505;
    const fun::RpcId RequestAutoPrune = (fun::RpcId)62506;
    const fun::RpcId GroupP2PConnectionComplete = (fun::RpcId)62507;

    inline const fun::RpcId* RpcIdList()
    {
      static const fun::RpcId IdList[NumRpcFunctions] = {P2PGroup_MemberJoin, P2PGroup_MemberJoin_Unencrypted, P2PGroup_MemberLeave, ReliablePong, P2PConnectStart, ShutdownTcpAck, RequestAutoPrune, GroupP2PConnectionComplete};
      return IdList;
    }
  }

  // Rpc function name string constants.
  namespace RpcNames
  {
    inline const char* P2PGroup_MemberJoin() { return TEXT("P2PGroup_MemberJoin"); }
    inline const char* P2PGroup_MemberJoin_Unencrypted() { return TEXT("P2PGroup_MemberJoin_Unencrypted"); }
    inline const char* P2PGroup_MemberLeave() { return TEXT("P2PGroup_MemberLeave"); }
    inline const char* ReliablePong() { return TEXT("ReliablePong"); }
    inline const char* P2PConnectStart() { return TEXT("P2PConnectStart"); }
    inline const char* ShutdownTcpAck() { return TEXT("ShutdownTcpAck"); }
    inline const char* RequestAutoPrune() { return TEXT("RequestAutoPrune"); }
    inline const char* GroupP2PConnectionComplete() { return TEXT("GroupP2PConnectionComplete"); }

    inline const char** RpcNameList()
    {
      static const char* NameList[NumRpcFunctions] = {P2PGroup_MemberJoin(), P2PGroup_MemberJoin_Unencrypted(), P2PGroup_MemberLeave(), ReliablePong(), P2PConnectStart(), ShutdownTcpAck(), RequestAutoPrune(), GroupP2PConnectionComplete()};
      return NameList;
    }
  }
} // end of namespace LanS2C

} // end of namespace fun
